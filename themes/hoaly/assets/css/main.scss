@use "sass:string";
@use "sass:map";

$languages: 'zh-Hans', 'en', 'ja', 'ja-jp', 'vi', 'it', 'de', 'fi', 'my';
$cjk-unicode-range: U+2E80-9FFF, U+FF00-FFFF;//, U+F900–FAFF, U+FE30–FE4F;
$sans-serif-tags: h1, h2, h3, h4, h5, h6, strong, dfn, th, header nav, table caption;


$font-family: (
  'serif': (
    'zh-Hans': ('简中衬线体', Georgia, 'Times New Roman', Times, serif),
    'ja': ('明朝', Georgia, 'Times New Roman', Times, serif),
    'vi': ('Times New Roman', Times, serif),
    'other': (Georgia, 'Times New Roman', Times, serif),
  ),
  'sans-serif': (
    'zh-Hans': ('简中无衬线体', 'Helvetica', sans-serif),
    'ja': ('ゴシック', 'Helvetica', sans-serif),
    'other': ('Helvetica', Helvetica, sans-serif),
  )
);

@function font-family($lang, $style) {
  @if str-slice($lang,1,2) == 'ja' {
    $lang: 'ja';
  }
  $lang-map: map-get($map: $font-family, $key: $style);
  @if map-has-key($map: $lang-map, $key: $lang) {
    @return map-get($lang-map, $lang);
  } @else {
    @return map-get($lang-map, 'other');
  }
}

@font-face {
  font-family: '明朝';
  src: local('游明朝'), local('Yu Mincho'), local('YuMincho'), local('ヒラギノ明朝 ProN'), local('HiraMinProN'), url(/fonts/YUMIN.TTF) format('truetype'), url(/fonts/YUMINDB.TTF) format('truetype'), url(/fonts/YUMINL.TTF) format('truetype');
  unicode-range: $cjk-unicode-range;
}

@font-face {
  font-family: 'Helvetica';
  src: local('Helvetica'), url(/fonts/Helvetica-Bold.ttf) format('truetype'), url(/fonts/Helvetica-BoldOblique.ttf) format('truetype'), url(/fonts/Helvetica-Oblique.ttf) format('truetype'), url(/fonts/Helvetica.ttf) format('truetype');
}

@font-face {
  font-family: 'ゴシック';
  src:local('游ゴシック'), local('ヒラギノ角ゴ ProN'), local('Hiragino Kaku Gothic ProN'), local('HiraKakuProN'), url(/fonts/YUGOTHB.TTC) format('truetype'), url(/fonts/YUGOTHL.TTC) format('truetype'), url(/fonts/YUGOTHM.TTC) format('truetype'), url(/fonts/YUGOTHR.TTC) format('truetype');
  unicode-range: $cjk-unicode-range;
}

@font-face {
  font-family: '简中衬线体';
  src: local('Noto Serif SC'), url(/fonts/NotoSerifSC-Regular.otf) format('opentype'), url(/fonts/NotoSerifSC-Black.otf) format('opentype'), url(/fonts/NotoSerifSC-Bold.otf) format('opentype'), url(/fonts/NotoSerifSC-Light.otf) format('opentype'), url(/fonts/NotoSerifSC-ExtraLight.otf) format('opentype'), url(/fonts/NotoSerifSC-SemiBold.otf) format('opentype'), url(/fonts/NotoSerifSC-Medium.otf) format('opentype');
  unicode-range: $cjk-unicode-range;
}

@font-face {
  font-family: '简中无衬线体';
  src: local('Noto Sans SC'), url(/fonts/NotoSansSC-Regular.otf) format('opentype'), url(/fonts/NotoSansSC-Black.otf) format('opentype'), url(/fonts/NotoSansSC-Bold.otf) format('opentype'), url(/fonts/NotoSansSC-Light.otf) format('opentype'), url(/fonts/NotoSansSC-Medium.otf) format('opentype'), url(/fonts/NotoSansSC-Thin.otf) format('opentype');
  unicode-range: $cjk-unicode-range;
}

@font-face {
  font-family: '简中宋体';
  src: local('SimSun'), local('LiSongPro'), local('Source Han Serif'), local('Noto Serif CJK'), url(/fonts/SIMSUN.TTC) format('truetype'), url(/fonts/SIMSUNB.TTF) format('truetype');
  unicode-range: $cjk-unicode-range;
}

@font-face {
  font-family: '简中黑体';
  src: local('SimHei'), local('Hiragino Sans GB'), local('Heiti SC'), local('STHeiti'), local('Source Han Sans'), local('Noto Sans CJK'), url(/fonts/SIMHEI.TTF) format('truetype');
  unicode-range: $cjk-unicode-range;
}

@mixin font($lang, $style) {
  // &[lang=#{$lang}], & [lang=#{$lang}], [lang=#{$lang}] &:not([lang]) {
  //   font-family: font-family($lang, $style)
  // }
  &:lang(#{$lang}){
    font-family: font-family($lang, $style);
  }
}

@mixin serif-font {
  @each $language in $languages {
    @include font($language, 'serif');
  }
}

@mixin sans-serif-font {
  @each $language in $languages {
    @include font($language, 'sans-serif');
  }
}


:not(:is(#{$sans-serif-tags})) [lang] {
  @include serif-font;
}

:is(#{$sans-serif-tags}) [lang], :is(#{$sans-serif-tags})[lang] {
  @include sans-serif-font;
}

// body, main, article, section, aside, header, footer, p, div, address, table, td, tr, :is(p,a,li) span[lang] {
//   @include serif-font;
// }

body {
  font-size: 16px;
  font-variant-numeric: lining-nums;
  // background-color: white;
  color: black;
  width: 600px;
  margin: auto;
  
  main {
    padding: 0px 5px 0px 5px;
    table, th, td {
      border: 1px solid black;
      border-collapse: collapse;
    }
    th,td {
      padding: 5px 10px 5px 10px;
      vertical-align: auto;
    }

    table.table-no-decoration {
      th, td, & {
        border: none!important;
        // border-style: hidden!important;
        padding: 0px 5px 0px 5px;
      }
    }
    
    figure {
      margin: 20px 0px 20px 0px;
      figcaption {
        text-align: center;
      }
    }
  }
  footer {
    text-align: center;
  }
}

table {
  margin-top: 10px;
  margin-bottom: 10px;
}



dfn {
  font-weight: bold;
  font-style: normal;
}

h1 {
  font-size: 2em;
}

h2 {
  font-size: 1.5em;
}

h3 {
  font-size: 1.2em;
}

h4, h5, h6 {
  font-size: 1em;
}

header {
  padding: 10px 0px 0px 0px;
  nav {
    a {
      text-decoration-line: none;
    }
  }
}

i.fab, a i.fas {
  color: black;
}

var {
  font-family: font-family('en', 'serif');
}


#{$sans-serif-tags} {
  @include sans-serif-font;
}

sub {
  font-variant-position: sub;
}

sup {
  font-variant-position: super;
}

.overline {
  border-top:black solid 1px;
}

.text-center {
  text-align: center;
}